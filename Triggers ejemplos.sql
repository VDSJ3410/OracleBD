-- Crear la Bitácora de la tabla CLIENTES
-- Para borrado fisico
-- ELSIF DELETING THEN
-- V_ACCION := 'DELETE';

CREATE OR REPLACE TRIGGER TRG_CLIENTES_AIU
AFTER INSERT OR UPDATE ON CLIENTES FOR EACH ROW
DECLARE
    V_ACCION VARCHAR2(10) := '';
    V_FECHA_CREACION DATE := NULL;
    V_FECHA_MODIFICACION DATE := NULL;
BEGIN
    IF INSERTING THEN
        V_ACCION := 'INSERT';
        V_FECHA_CREACION := SYSDATE;
    ELSIF UPDATING THEN
        V_ACCION := 'UPDATE';
        V_FECHA_MODIFICACION := SYSDATE;
    END IF;
    INSERT INTO CLIENTES_BIT (ID_CLIENTE_BIT, ID_CLIENTE, NOMBRE, APATERNO, AMATERNO, RFC, FECHA_ALTA, FECHA_CREACION, FECHA_MODIFICACION, ACCION, IP)
        VALUES (SEC_ID_CLIENTE_BIT.NEXTVAL, :NEW.ID_CLIENTE, :NEW.NOMBRE, :NEW.APATERNO, :NEW.AMATERNO, :NEW.RFC, :NEW.FECHA_ALTA,
        V_FECHA_CREACION, V_FECHA_MODIFICACION, V_ACCION, FN_GET_IP);
END;

 DROP TRIGGER TRG_PAGOS_AIU;

-- Creación de la Bitácora de la Tabla Telefonos  
CREATE OR REPLACE TRIGGER TRG_TELEFONOS_AIU
AFTER INSERT OR UPDATE ON TELEFONOS FOR EACH ROW
DECLARE
    V_ACCION VARCHAR2(10) := '';
    V_FECHA_CREACION DATE := NULL;
    V_FECHA_MODIFICACION DATE := NULL;
BEGIN
    IF INSERTING THEN
        V_ACCION := 'INSERT';
        V_FECHA_CREACION := SYSDATE;
    ELSIF UPDATING THEN
        V_ACCION := 'UPDATE';
        V_FECHA_MODIFICACION := SYSDATE;
    END IF;
    INSERT INTO TELEFONOS_BIT (ID_TELEFONO_BIT, ID_TELEFONO, ID_CLIENTE, TELEFONO, FECHA_CREACION, FECHA_MODIFICACION, ACCION, IP)
        VALUES (SEC_ID_TELEFONO_BIT.NEXTVAL, :NEW.ID_TELEFONO, :NEW.ID_CLIENTE, :NEW.TELEFONO,
        V_FECHA_CREACION, V_FECHA_MODIFICACION, V_ACCION, FN_GET_IP);
END;

-- Creación de la Bitácora de la tabla Facturas
CREATE OR REPLACE TRIGGER TRG_FACTURAS_AIU
AFTER INSERT OR UPDATE ON FACTURAS FOR EACH ROW
DECLARE
    V_ACCION VARCHAR2(10) := '';
    V_FECHA_CREACION DATE := NULL;
    V_FECHA_MODIFICACION DATE := NULL;
BEGIN
    IF INSERTING THEN
        V_ACCION := 'INSERT';
        V_FECHA_CREACION := SYSDATE;
    ELSIF UPDATING THEN
        V_ACCION := 'UPDATE';
        V_FECHA_MODIFICACION := SYSDATE;
    END IF;
    INSERT INTO FACTURAS_BIT (ID_FACTURA_BIT, ID_FACTURA, ID_CLIENTE, MONTO_TOTAL, FOLIO, ANIO, FECHA_FACTURA, FECHA_CREACION, FECHA_MODIFICACION, ACCION, IP)
        VALUES (SEC_ID_FACTURA_BIT.NEXTVAL, :NEW.ID_FACTURA, :NEW.ID_CLIENTE, :NEW.MONTO_TOTAL, :NEW.FOLIO, :NEW.ANIO, :NEW.FECHA_FACTURA,
        V_FECHA_CREACION, V_FECHA_MODIFICACION, V_ACCION, FN_GET_IP);
END;


-- Creación de la Bitácora de Tabla Pagos
CREATE OR REPLACE TRIGGER TRG_PAGOS_AIU
AFTER INSERT OR UPDATE ON PAGOS FOR EACH ROW
DECLARE
    V_ACCION VARCHAR2(10) := '';
    V_FECHA_CREACION DATE := NULL;
    V_FECHA_MODIFICACION DATE := NULL;
BEGIN
    IF INSERTING THEN
        V_ACCION := 'INSERT';
        V_FECHA_CREACION := SYSDATE;
    ELSIF UPDATING THEN
        V_ACCION := 'UPDATE';
        V_FECHA_MODIFICACION := SYSDATE;
    END IF;
    INSERT INTO PAGOS_BIT (ID_PAGO_BIT, ID_PAGO, ID_FACTURA, MONTO, FECHA_PAGO, FECHA_CREACION, FECHA_MODIFICACION, ACCION, IP)
        VALUES (SEC_ID_PAGO_BIT.NEXTVAL, :NEW.ID_PAGO, :NEW.ID_FACTURA, :NEW.MONTO, :NEW.FECHA_PAGO,
        V_FECHA_CREACION, V_FECHA_MODIFICACION, V_ACCION, FN_GET_IP);
END;

-- Crear trigger para el ID de la Tabla Clientes
CREATE OR REPLACE TRIGGER TRG_CLIENTES_BI
BEFORE INSERT ON CLIENTES FOR EACH ROW
BEGIN
    :NEW.ID_CLIENTE := SEC_ID_CLIENTE.NEXTVAL;
END;

-- Crear trigger para el ID de la Tabla teléfonos
CREATE OR REPLACE TRIGGER TRG_TELEFONOS_BI
BEFORE INSERT ON TELEFONOS FOR EACH ROW
BEGIN
    :NEW.ID_TELEFONO := SEC_ID_TELEFONO.NEXTVAL;
END;

-- Crear trigger para el ID de la Tabla pagos
CREATE OR REPLACE TRIGGER TRG_PAGOS_BI
BEFORE INSERT ON PAGOS FOR EACH ROW
BEGIN
    :NEW.ID_PAGO := SEC_ID_PAGO.NEXTVAL;
END;

-- Crear trigger para el ID, Folio y año de la tabla facturas
CREATE OR REPLACE TRIGGER TRG_FACTURAS_BI
BEFORE INSERT ON FACTURAS FOR EACH ROW
BEGIN
    -- Llave primaria
    :NEW.ID_FACTURA := SEC_ID_FACTURA.NEXTVAL;
    -- Calcular el año de la factura con el campo fecha_factura
    :NEW.ANIO := EXTRACT(YEAR FROM :NEW.FECHA_FACTURA);
    -- Calcular el folio de la factura
    :NEW.FOLIO := FN_OBTENER_FOLIO_FACTURA(:NEW.FECHA_FACTURA);

END;
