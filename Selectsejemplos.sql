-- Funciones de agregación 

-- COUNT EN CLIENTES 5 ROWS
-- Mala Práctica
SELECT COUNT(*) FROM CLIENTES;

-- Como buena práctica se realiza con campos numéricos y/o son Primary Key o 
-- Foreign Key el agregado COUNT
SELECT COUNT(ID_CLIENTE) FROM CLIENTES;

SELECT * FROM CLIENTES WHERE NOMBRE LIKE '%na'; -- Coincidencia parcial todo lo que termine
SELECT * FROM CLIENTES WHERE NOMBRE LIKE 'na%'; -- Coincidencia parcial todo lo que inicie
SELECT * FROM CLIENTES WHERE NOMBRE LIKE '%na%' 
OR APATERNO LIKE '%na%' OR AMATERNO LIKE '%na'; -- Coincidencia parcial sin importar la posición

-- UPPER CONVERTIR A MAYÚSCULAS EL TEXTO
-- LOWER CONVERTIR A MINÚSCULAS EL TEXTO
SELECT COUNT(ID_CLIENTE) FROM VIW_CLIENTES_TELEFONOS 
WHERE UPPER (NOMBRE_CLIENTE) LIKE UPPER('%na%');

SELECT
C.NOMBRE,
C.APATERNO,
COUNT(ID_FACTURA) AS TOTAL_FACTURAS,
MAX(MONTO_TOTAL) AS MONTO_MAXIMO,
MIN(MONTO_TOTAL) AS MONTO_MINIMO,
AVG(MONTO_TOTAL) AS MONTO_PROMEDIO,
SUM(MONTO_TOTAL) AS TOTAL_FACTURADO
FROM FACTURAS F
LEFT JOIN CLIENTES C ON F.ID_CLIENTE = C.ID_CLIENTE
GROUP BY C.NOMBRE, C.APATERNO ORDER BY TOTAL_FACTURADO DESC;

SELECT 
F.FOLIO || '/' || F.ANIO AS FOLIO,
F.MONTO_TOTAL,
C.NOMBRE || ' ' || C.APATERNO || ' ' || C.AMATERNO AS NOMBRE_CLIENTE
FROM
FACTURAS F
INNER JOIN CLIENTES C ON F.ID_CLIENTE = C.ID_CLIENTE
WHERE FECHA_FACTURA BETWEEN DATE '2023-01-01' AND DATE '2023-12-31'
ORDER BY FOLIO;

SELECT 
NOMBRE_CLIENTE,
RFC,
LISTAGG(TELEFONO, ',') WITHIN GROUP (ORDER BY TELEFONO) AS TELEFONOS
FROM VIW_CLIENTES_TELEFONOS
GROUP BY NOMBRE_CLIENTE, RFC;

SELECT * FROM MV_CLIENTES_TELEFONOS;

INSERT INTO CLIENTES (NOMBRE, APATERNO, AMATERNO, RFC, FECHA_ALTA)
VALUES ('Victoria', 'Ortiz', 'López', 'ORVL090520', DATE '2024-09-10');

SELECT 
    DISTINCT APATERNO
FROM CLIENTES;





